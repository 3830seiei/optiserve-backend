# Dev image that also bakes test assets (reports/uploads/db) into /data
FROM python:3.12.11-slim

ENV PIP_NO_CACHE_DIR=1 PYTHONDONTWRITEBYTECODE=1 PYTHONUNBUFFERED=1 \
    LANG=ja_JP.UTF-8 TZ=Asia/Tokyo

WORKDIR /app

# Minimal build tools (only if native deps appear in requirements.txt)
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    && rm -rf /var/lib/apt/lists/*

# Backend deps first for cache efficiency
COPY optiserve-backend/requirements.txt /tmp/requirements.txt
RUN python -m pip install --upgrade pip \
    && pip install -r /tmp/requirements.txt

# -----------------------------
# Bake test assets into image
# -----------------------------
ENV REPORTS_DIR=/data/reports \
    UPLOADS_DIR=/data/uploads \
    DATABASE_URL=sqlite:////data/poc_optigate.db

RUN mkdir -p "${REPORTS_DIR}" "${UPLOADS_DIR}" /data

# Copy folders and DB used by pytest (present under optiserve-backend/)
COPY optiserve-backend/files/reports/ "${REPORTS_DIR}/"
COPY optiserve-backend/files/uploads/ "${UPLOADS_DIR}/"

# If the DB file does not exist, this COPY will fail. Keep the file in repo for deterministic tests.
COPY optiserve-backend/poc_optigate.db /data/poc_optigate.db

# Copy backend sources so container can run even without bind mounts
COPY optiserve-backend/ /app/

# Entrypoint
COPY optiserve-backend/docker/entrypoint.dev.sh /docker/entrypoint.dev.sh
RUN chmod +x /docker/entrypoint.dev.sh && sed -i 's/\r$//' /docker/entrypoint.dev.sh
CMD ["/docker/entrypoint.dev.sh"]

